{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/grid.tsx","webpack:///./src/hooks/tetriminos.ts","webpack:///./src/hooks/tetris.ts","webpack:///./src/hooks/coordinates.ts","webpack:///./src/hooks/movement.ts","webpack:///./src/hooks/timing.ts","webpack:///./src/hooks/bindings.ts","webpack:///./src/components/board.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["$export","$entries","S","entries","it","module","exports","toObject","toAbsoluteIndex","toLength","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Point","color","style","height","margin","width","borderRadius","border","backgroundColor","Grid","props","Array","dimensions","fill","map","_","key","__","points","String","i","coordinates","accentColor","j","l","o","s","z","t","getRandomTetriminos","tetriminos","JSON","parse","stringify","Math","floor","random","shiftCoordinate","coordinate","shift","shiftCoordinates","positionTetrimino","tetrimino","brickPosition","tetriminoToCoords","reduce","dict","useTetris","initialDimensions","useState","setDimensions","activeTetrimino","setActiveTetrimino","nextTetrimino","setNextTetrimino","replaceCurrentTetrimino","useCallback","useTetriminos","defaultBrickPosition","setBrickPosition","gotoDefaultBrickPosition","stationaryBrickCoordinates","setStationaryBrickCoordinates","stationaryBrickCoordinateIndex","setStationaryBrickCoordinateIndex","allCoordinates","setAllCoordinates","resetCoordinates","useEffect","addStationaryCoordinates","newCoordinateDict","newCoordinateIndex","forEach","posY","posX","rowsRemoved","Object","row","pointsInRow","keys","Number","workingRow","sort","a","b","useCoordinates","coordinatesDict","willCollide","every","isClearLeft","isClearRight","isClearBottom","isClearEnvironment","landedCb","outOfBoundsCb","positionedTetrimino","some","poY","rotate","remapFunc","rotatedTetrimino","rotateClockwise","rotateCounterClockwise","moveLeft","moveRight","moveDown","useMovement","getNextTetrimino","score","setScore","addToScore","rowsDeleted","gameTicker","setGameTicker","speed","setSpeed","increaseSpeed","resetGameSpeed","onLand","cb","onOutOfBounds","window","alert","setTimeout","useTiming","resetGameState","bindings","callbacks","binding","callback","event","fn","addEventListener","removeEventListener","useBindings","Board","padding","display","flexShrink","marginRight","flexDirection","justifyContent","marginBottom","fontFamily","flexGrow","IndexPage","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","result","call","push","P","defined","fails","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","trim","F","string","TYPE","replace","global","has","cof","inheritIfRequired","toPrimitive","gOPN","gOPD","dP","$trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","parseInt","that","valueOf","split","constructor"],"mappings":"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","file":"component---src-pages-index-tsx-418099086308007653ff.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from \"react\"\n\nconst Point: React.FC<{ color?: string }> = ({ color }) => {\n  return (\n    <td\n      style={{\n        height: \"25px\",\n        margin: 5,\n        width: \"25px\",\n        borderRadius: \"6px\",\n        border: color ? \"\" : \"1px solid rgba(255, 255, 255, 0.26)\",\n        backgroundColor: color,\n      }}\n    ></td>\n  )\n}\n\nexport const Grid: React.FC<{\n  dimensions: [number, number]\n  points: { [posYPosX: string]: string }\n}> = props => (\n  <table>\n    <tbody>\n      {new Array(props.dimensions[0]).fill(undefined).map((_, height) => (\n        <tr key={`board-row-${height}`}>\n          {new Array(props.dimensions[1]).fill(undefined).map((__, width) => (\n            <Point\n              key={`board-row-${height}-pos-${width}`}\n              color={props.points[String([height, width])]}\n            />\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  </table>\n)\n","import { Coordinate, Dimensions } from \"../types\"\nimport { useState, useCallback, useEffect } from \"react\"\n\nexport interface ITetrimino {\n  coordinates: Coordinate[]\n  color: string\n  accentColor: string\n}\n\nconst i: ITetrimino = {\n  coordinates: [\n    [-1, 0],\n    [0, 0],\n    [1, 0],\n    [2, 0],\n  ],\n  accentColor: \"#E09B9B\",\n  color: \"#E34848\",\n}\nconst j: ITetrimino = {\n  coordinates: [\n    [1, -1],\n    [0, -1],\n    [0, 0],\n    [0, 1],\n  ],\n  accentColor: \"#DCDCDC\",\n  color: \"#DCDCDC\",\n}\n\nconst l: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ],\n  accentColor: \"#E4C0EA\",\n  color: \"#D242EA\",\n}\nconst o: ITetrimino = {\n  coordinates: [\n    [0, 0],\n    [0, 1],\n    [-1, 0],\n    [-1, 1],\n  ],\n  accentColor: \"#9DA2D2\",\n  color: \"#2536D2\",\n}\n\nconst s: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [1, 0],\n    [1, 1],\n  ],\n  accentColor: \"#9CDADE\",\n  color: \"#6CE5ED\",\n}\n\nconst z: ITetrimino = {\n  coordinates: [\n    [1, -1],\n    [1, 0],\n    [0, 0],\n    [0, 1],\n  ],\n  accentColor: \"#B9E7A8\",\n  color: \"#83EB5E\",\n}\n\nconst t: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [1, 0],\n    [-1, 0],\n  ],\n  accentColor: \"#FFD5AE\",\n  color: \"#FB9A41\",\n}\n\nconst getRandomTetriminos = () => {\n  const tetriminos = [t, z, s, l, j, i, o]\n  return JSON.parse(\n    JSON.stringify(tetriminos[Math.floor(Math.random() * tetriminos.length)])\n  ) as ITetrimino\n}\n\nexport const useTetriminos = (dimensions: Dimensions) => {\n  const [activeTetrimino, setActiveTetrimino] = useState(getRandomTetriminos())\n  const [nextTetrimino, setNextTetrimino] = useState(getRandomTetriminos())\n\n  const replaceCurrentTetrimino = useCallback(() => {\n    setActiveTetrimino(nextTetrimino)\n    setNextTetrimino(getRandomTetriminos())\n  }, [nextTetrimino])\n\n  return {\n    replaceCurrentTetrimino,\n    setActiveTetrimino,\n    activeTetrimino,\n    nextTetrimino,\n  }\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport { useTetriminos, ITetrimino } from \"../hooks/tetriminos\"\nimport { Coordinate, CoordinateDictionary } from \"../types\"\nimport { useCoordinates } from \"../hooks/coordinates\"\nimport { useMovement } from \"../hooks/movement\"\nimport { useBindings } from \"./bindings\"\nimport { useTiming } from \"./timing\"\n\nexport const shiftCoordinate = (\n  coordinate: Coordinate,\n  shift: Coordinate\n): Coordinate => [coordinate[0] + shift[0], coordinate[1] + shift[1]]\n\nexport const shiftCoordinates = (\n  coordinates: Coordinate[],\n  shift: Coordinate\n): Coordinate[] => {\n  return coordinates.map(coordinate => {\n    return shiftCoordinate(coordinate, shift)\n  })\n}\n\nexport const positionTetrimino = (\n  tetrimino: ITetrimino,\n  brickPosition: Coordinate\n) => {\n  return {\n    ...tetrimino,\n    coordinates: shiftCoordinates(tetrimino.coordinates, brickPosition),\n  }\n}\nexport const tetriminoToCoords = (tetrimino: ITetrimino) =>\n  tetrimino.coordinates.reduce((dict, coordinate) => {\n    dict[String(coordinate)] = tetrimino.color\n    return dict\n  }, {} as CoordinateDictionary)\n\nexport const useTetris = (initialDimensions: [number, number]) => {\n  const [dimensions, setDimensions] = useState(initialDimensions)\n\n  const {\n    activeTetrimino,\n    setActiveTetrimino,\n    nextTetrimino,\n    replaceCurrentTetrimino,\n  } = useTetriminos(dimensions)\n\n  const defaultBrickPosition: Coordinate = [\n    0,\n    Math.floor(dimensions[1] / 2 - 1),\n  ]\n  const [brickPosition, setBrickPosition] = useState<Coordinate>(\n    defaultBrickPosition\n  )\n  const gotoDefaultBrickPosition = useCallback(() => {\n    setBrickPosition(defaultBrickPosition)\n  }, [])\n\n  const {\n    allCoordinates,\n    resetCoordinates,\n    stationaryBrickCoordinates,\n    addStationaryCoordinates,\n  } = useCoordinates(activeTetrimino, brickPosition, dimensions)\n\n  const {\n    moveDown,\n    moveLeft,\n    moveRight,\n    rotateClockwise,\n    rotateCounterClockwise,\n  } = useMovement(\n    activeTetrimino,\n    setActiveTetrimino,\n    brickPosition,\n    setBrickPosition,\n    dimensions,\n    stationaryBrickCoordinates\n  )\n\n  const getNextTetrimino = useCallback(() => {\n    replaceCurrentTetrimino()\n    gotoDefaultBrickPosition()\n  }, [addStationaryCoordinates, replaceCurrentTetrimino])\n  // BUG: removing multiple rows is spotty\n\n  const [score, setScore] = useState(0)\n\n  const addToScore = useCallback(\n    (rowsDeleted: number) => {\n      setScore(score + rowsDeleted * (100 * rowsDeleted))\n    },\n    [score]\n  )\n\n  const { speed, resetGameSpeed } = useTiming(\n    moveDown,\n    getNextTetrimino,\n    resetCoordinates,\n    addStationaryCoordinates,\n    score,\n    setScore,\n    addToScore\n  )\n  const resetGameState = useCallback(() => {\n    resetGameSpeed()\n    resetCoordinates()\n    setScore(0)\n    getNextTetrimino()\n  }, [resetCoordinates, resetGameSpeed, getNextTetrimino])\n\n  const bindings = [\n    { key: \"ArrowDown\", fn: moveDown },\n    { key: \"ArrowLeft\", fn: moveLeft },\n    { key: \"ArrowRight\", fn: moveRight },\n    { key: \"w\", fn: rotateClockwise },\n    { key: \"q\", fn: rotateCounterClockwise },\n  ]\n\n  useBindings(bindings)\n\n  return {\n    dimensions,\n    resetGameState,\n    activeTetrimino,\n    tetriminoToCoords,\n    score,\n    nextTetrimino,\n    setDimensions,\n    replaceCurrentTetrimino,\n    allCoordinates,\n    shiftCoordinates,\n    setBrickPosition,\n    addStationaryCoordinates,\n    moveLeft,\n    moveRight,\n    speed,\n    moveDown,\n    rotateClockwise,\n    rotateCounterClockwise,\n  }\n}\n","import { useState, useEffect, useCallback } from \"react\"\nimport { ITetrimino } from \"./tetriminos\"\nimport {\n  Dimensions,\n  CoordinateDictionary,\n  CoordinateIndex,\n  Coordinate,\n} from \"../types\"\nimport { positionTetrimino, tetriminoToCoords } from \"./tetris\"\n\nexport const useCoordinates = (\n  activeTetrimino: ITetrimino,\n  brickPosition: Coordinate,\n  dimensions: Dimensions\n) => {\n  const [stationaryBrickCoordinates, setStationaryBrickCoordinates] = useState<\n    CoordinateDictionary\n  >({})\n  const [\n    stationaryBrickCoordinateIndex,\n    setStationaryBrickCoordinateIndex,\n  ] = useState<CoordinateIndex>({})\n\n  const [allCoordinates, setAllCoordinates] = useState<CoordinateDictionary>({})\n\n  const resetCoordinates = useCallback(() => {\n    setStationaryBrickCoordinates({})\n    setStationaryBrickCoordinateIndex({})\n  }, [])\n\n  useEffect(() => {\n    const tetrimino = positionTetrimino(activeTetrimino, brickPosition)\n\n    setAllCoordinates({\n      ...stationaryBrickCoordinates,\n      ...tetriminoToCoords(tetrimino),\n    })\n  }, [activeTetrimino, stationaryBrickCoordinates, brickPosition])\n  \n  const addStationaryCoordinates = useCallback(() => {\n    const tetrimino = positionTetrimino(activeTetrimino, brickPosition)\n    const [height, width] = dimensions\n\n    let newCoordinateDict = {\n      ...stationaryBrickCoordinates,\n      ...tetriminoToCoords(tetrimino),\n    }\n    let newCoordinateIndex = { ...stationaryBrickCoordinateIndex }\n\n    tetrimino.coordinates.forEach(([posY, posX]) => {\n      if (!newCoordinateIndex[posY]) {\n        newCoordinateIndex[posY] = {}\n      }\n      newCoordinateIndex[posY][posX] = true\n    })\n\n    let rowsRemoved = 0\n    // delete full rows\n    {\n      const pointsByRow = Object.entries(newCoordinateIndex)\n      pointsByRow.forEach(([posY, row]) => {\n        const pointsInRow = Object.keys(row)\n        if (pointsInRow.length >= width) {\n          pointsInRow.forEach(\n            posX =>\n              delete newCoordinateDict[String([Number(posY), Number(posX)])]\n          )\n          delete newCoordinateIndex[posY]\n          rowsRemoved = rowsRemoved + 1\n        }\n      })\n    }\n\n    //shift rows down\n    if (rowsRemoved) {\n      let workingRow = height - 1\n      const pointsByRow = Object.entries(newCoordinateIndex).sort(\n        ([a], [b]) => Number(b) - Number(a)\n      )\n      const [index, dict] = pointsByRow.reduce(\n        ([index, dict], [posY, points]) => {\n          index[workingRow] = points\n\n          Object.keys(points).forEach(([posX]) => {\n            dict[String([workingRow, Number(posX)])] =\n              newCoordinateDict[String([Number(posY), Number(posX)])]\n          })\n\n          workingRow = workingRow - 1\n\n          return [index, dict]\n        },\n        [{}, {}]\n      )\n      newCoordinateIndex = index\n      newCoordinateDict = dict\n    }\n\n    setStationaryBrickCoordinates(newCoordinateDict)\n    setStationaryBrickCoordinateIndex(newCoordinateIndex)\n\n    return rowsRemoved\n  }, [\n    stationaryBrickCoordinates,\n    stationaryBrickCoordinateIndex,\n    activeTetrimino,\n    brickPosition,\n  ])\n\n  return {\n    resetCoordinates,\n    allCoordinates,\n    addStationaryCoordinates,\n    stationaryBrickCoordinates,\n  }\n}\n","import { useCallback, useEffect } from \"react\"\nimport { ITetrimino } from \"./tetriminos\"\nimport { Dimensions, CoordinateDictionary, Coordinate } from \"../types\"\nimport { shiftCoordinate, shiftCoordinates, positionTetrimino } from \"./tetris\"\n\nexport const useMovement = (\n  tetrimino: ITetrimino,\n  setActiveTetrimino: React.Dispatch<React.SetStateAction<ITetrimino>>,\n  brickPosition: Coordinate,\n  setBrickPosition: React.Dispatch<React.SetStateAction<[number, number]>>,\n  dimensions: Dimensions,\n  coordinatesDict: CoordinateDictionary\n) => {\n  const willCollide = useCallback(\n    (coordinates: Coordinate[]) => {\n      return coordinates.every(([posY, posX]) => {\n        const isClearLeft = 0 <= posX\n        const isClearRight = posX < dimensions[1]\n        const isClearBottom = posY < dimensions[0]\n        const isClearEnvironment = !coordinatesDict[String([posY, posX])]\n        return (\n          isClearLeft &&\n          isClearRight &&\n\n          isClearBottom &&\n          isClearEnvironment\n        )\n      })\n    },\n    [dimensions, coordinatesDict]\n  )\n\n  const shift = useCallback(\n    (shift: Coordinate, landedCb?: Function, outOfBoundsCb?: Function) => {\n      const positionedTetrimino = positionTetrimino(tetrimino, brickPosition)\n\n      if (\n        willCollide(shiftCoordinates(positionedTetrimino.coordinates, shift))\n      ) {\n        setBrickPosition(shiftCoordinate(brickPosition, shift))\n      } else {\n        //out of bounds\n        if (positionedTetrimino.coordinates.some(([poY, posX]) => poY <= 0)) {\n          if (outOfBoundsCb) outOfBoundsCb()\n        } else if (landedCb) landedCb()\n      }\n    },\n    [tetrimino, dimensions, coordinatesDict, brickPosition]\n  )\n\n  const rotate = useCallback(\n    (remapFunc: (Coordinate) => Coordinate) => {\n      const rotatedTetrimino: ITetrimino = {\n        ...tetrimino,\n        coordinates: tetrimino.coordinates.map(remapFunc),\n      }\n      const positionedTetrimino = positionTetrimino(\n        rotatedTetrimino,\n        brickPosition\n      )\n\n      if (!willCollide(positionedTetrimino.coordinates)) {\n        if (\n          willCollide(shiftCoordinates(positionedTetrimino.coordinates, [0, 1]))\n        ) {\n          shift([0, 1])\n          setActiveTetrimino(rotatedTetrimino)\n        }\n\n        if (\n          willCollide(\n            shiftCoordinates(positionedTetrimino.coordinates, [0, -1])\n          )\n        ) {\n          shift([0, -1])\n          setActiveTetrimino(rotatedTetrimino)\n        }\n      } else setActiveTetrimino(rotatedTetrimino)\n    },\n    [tetrimino, brickPosition]\n  )\n\n  const rotateClockwise = useCallback(() => {\n    rotate(([posY, posX]) => [posX, -posY])\n  }, [rotate])\n\n  const rotateCounterClockwise = useCallback(() => {\n    rotate(([posY, posX]) => [-posX, posY])\n  }, [rotate])\n\n  const moveLeft = useCallback(() => {\n    return shift([0, -1])\n  }, [shift])\n\n  const moveRight = useCallback(() => {\n    return shift([0, 1])\n  }, [shift])\n\n  const moveDown = useCallback(\n    (landedCb?: Function, outOfBoundsCb?: Function) => {\n      return shift([1, 0], landedCb, outOfBoundsCb)\n    },\n    [shift]\n  )\n\n  return {\n    rotateClockwise,\n    rotateCounterClockwise,\n    moveLeft,\n    moveRight,\n    moveDown,\n  }\n}\n","import { useState, useCallback, useEffect } from \"react\"\n\nexport const useTiming = (\n  moveDown,\n  getNextTetrimino,\n  resetCoordinates,\n  addStationaryCoordinates,\n  score,\n  setScore,\n  addToScore\n) => {\n  const [gameTicker, setGameTicker] = useState(0)\n  const [speed, setSpeed] = useState(40)\n\n  const increaseSpeed = useCallback(\n    (rowsRemoved: number) => {\n      setSpeed(speed - 2 * rowsRemoved)\n    },\n    [speed]\n  )\n\n  const resetGameSpeed = useCallback(() => {\n    setSpeed(40)\n  }, [])\n\n  const onLand = useCallback(\n    (cb?: Function) => {\n      const rowsRemoved = addStationaryCoordinates()\n\n      if (rowsRemoved) {\n        increaseSpeed(rowsRemoved)\n        addToScore(rowsRemoved)\n      }\n      getNextTetrimino()\n    },\n    [addStationaryCoordinates, increaseSpeed, getNextTetrimino, addToScore]\n  )\n\n  const onOutOfBounds = useCallback(() => {\n    window.alert(`You've lost! Your final score was ${score}`)\n    resetCoordinates()\n    setScore(0)\n    resetGameSpeed()\n    getNextTetrimino()\n  }, [getNextTetrimino, score])\n  useEffect(() => {\n    if (!(gameTicker % speed)) {\n      moveDown(onLand, onOutOfBounds)\n    }\n  }, [gameTicker, speed])\n\n  useEffect(() => {\n    setTimeout(() => setGameTicker(gameTicker + 1), 10)\n  }, [gameTicker])\n  return {\n    speed,\n    resetGameSpeed,\n  }\n}\n","import { useEffect } from \"react\"\n\nexport const useBindings = (bindings: { key: string; fn: Function }[]) => {\n  useEffect(\n    () => {\n      const callbacks = bindings.map(binding => {\n        const callback = (event: any) =>\n          event.key === binding.key ? binding.fn() : null\n\n        window.addEventListener(\"keydown\", callback)\n        return callback\n      })\n\n      return () => {\n        callbacks.forEach(callback => {\n          window.removeEventListener(\"keydown\", callback)\n        })\n      }\n    },\n    bindings.map(binding => binding.fn)\n  )\n}\n","import React from \"react\"\nimport { Grid } from \"./grid\"\nimport { useTetris, shiftCoordinates } from \"../hooks/tetris\"\n\nexport const Board = () => {\n  const {\n    allCoordinates,\n    activeTetrimino,\n    tetriminoToCoords,\n    nextTetrimino,\n    dimensions,\n    setDimensions,\n    shiftCoordinates,\n    score,\n    resetGameState,\n    speed,\n  } = useTetris([20, 10])\n\n  return (\n    <div\n      style={{\n        padding: 20,\n        backgroundColor: activeTetrimino.accentColor,\n        display: \"flex\",\n        width: \"fit-content\",\n        margin: \"auto\",\n      }}\n    >\n      <div style={{ display: \"flex\", flexShrink: 1 }}>\n        <div\n          style={{\n            backgroundColor: \"#260A57\",\n            padding: 35,\n            marginRight: 20,\n          }}\n        >\n          <Grid dimensions={dimensions} points={allCoordinates} />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: \"#260A57\",\n              padding: 35,\n              marginBottom: 20,\n            }}\n          >\n            <Grid\n              dimensions={[4, 4]}\n              points={tetriminoToCoords({\n                ...nextTetrimino,\n                coordinates: shiftCoordinates(nextTetrimino.coordinates, [\n                  1,\n                  1,\n                ]),\n              })}\n            />\n          </div>\n          <div\n            style={{\n              backgroundColor: \"#260A57\",\n              fontFamily: \"Press Start 2P\",\n              color: \"white\",\n              padding: 35,\n              flexGrow: 1,\n            }}\n          >\n            <h3>Arrow Keys: Move</h3>\n            <h3> Q/W: rotate</h3>\n\n            <h3>Score: {score}</h3>\n            <h5>Blocks move every {speed}0/ms</h5>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { Board } from \"../components/board\"\n\nconst IndexPage = () => {\n  return (\n    <div>\n      <Board />\n    </div>\n  )\n}\n\nexport default IndexPage\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}