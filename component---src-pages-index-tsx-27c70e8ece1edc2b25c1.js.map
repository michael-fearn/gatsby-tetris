{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/board.tsx","webpack:///./src/hooks/tetriminos.ts","webpack:///./src/hooks/tetris.ts","webpack:///./src/hooks/coordinates.ts","webpack:///./src/hooks/movement.ts","webpack:///./src/hooks/bindings.ts","webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["$export","$entries","S","entries","it","module","exports","toObject","toAbsoluteIndex","toLength","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Point","color","style","height","width","border","backgroundColor","Board","props","Array","dimensions","fill","map","_","key","__","points","String","i","coordinates","j","l","o","s","z","t","getRandomTetriminos","tetriminos","JSON","parse","stringify","Math","floor","random","shiftCoordinate","coordinate","shift","shiftCoordinates","positionTetrimino","tetrimino","brickPosition","tetriminoToCoords","reduce","dict","useTetris","initialDimensions","useState","activeTetrimino","setActiveTetrimino","nextTetrimino","setNextTetrimino","replaceCurrentTetrimino","useCallback","useTetriminos","setBrickPosition","stationaryBrickCoordinates","setStationaryBrickCoordinates","stationaryBrickCoordinateIndex","setStationaryBrickCoordinateIndex","allCoordinates","setAllCoordinates","reset","useEffect","addStationaryCoordinates","cb","boardWidth","newCoordinateDict","newCoordinateIndex","forEach","posY","posX","rowsToRemove","filter","self","indexOf","row","Object","keys","Number","column","useCoordinates","coordinatesDict","willCollide","every","isClearLeft","isClearRight","isClearTop","isClearBottom","isClearEnvironment","positionedTetrimino","rotate","remapFunc","rotatedTetrimino","rotateClockwise","rotateCounterClockwise","moveLeft","moveRight","moveDown","useMovement","gotoDefaultBrickPosition","gameTicker","setGameTicker","speed","setSpeed","increaseSpeed","rowsRemoved","getNextTetrimino","bindings","callbacks","binding","callback","event","fn","window","addEventListener","removeEventListener","useBindings","setTimeout","IndexPage","setDimensions","htmlFor","type","onChange","target","onClick","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","result","call","push","P","defined","fails","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","trim","F","string","TYPE","replace","global","has","cof","inheritIfRequired","toPrimitive","gOPN","gOPD","dP","$trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","parseInt","that","valueOf","split","constructor"],"mappings":"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","file":"component---src-pages-index-tsx-27c70e8ece1edc2b25c1.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from \"react\"\n\nconst Point: React.FC<{ color?: string }> = ({ color }) => {\n  return (\n    <td\n      style={{\n        height: \"20px\",\n        width: \"20px\",\n        border: \"1px solid black\",\n        backgroundColor: color,\n      }}\n    ></td>\n  )\n}\n\nexport const Board: React.FC<{\n  dimensions: [number, number]\n  points: { [posYPosX: string]: string }\n}> = props => (\n  <table>\n    <tbody>\n      {new Array(props.dimensions[0]).fill(undefined).map((_, height) => (\n        <tr key={`board-row-${height}`}>\n          {new Array(props.dimensions[1]).fill(undefined).map((__, width) => (\n            <Point\n              key={`board-row-${height}-pos-${width}`}\n              color={props.points[String([height, width])]}\n            />\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  </table>\n)\n","import { Coordinate, Dimensions } from \"../types\"\nimport { useState, useCallback, useEffect } from \"react\"\n\nexport interface ITetrimino {\n  coordinates: Coordinate[]\n  color: string\n\n}\n\nconst i: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [0, 1],\n    [0, 2],\n  ],\n  color: \"#00F0F0\",\n}\nconst j: ITetrimino = {\n  coordinates: [\n    [1, -1],\n    [0, -1],\n    [0, 0],\n    [0, 1],\n  ],\n  color: \"#0000F0\",\n}\n\nconst l: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ],\n  color: \"#F0A000\",\n}\nconst o: ITetrimino = {\n  coordinates: [\n    [0, 0],\n    [0, 1],\n    [-1, 0],\n    [-1, 1],\n  ],\n  color: \"#F0F000\",\n}\n\nconst s: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [1, 0],\n    [1, 1],\n  ],\n  color: \"#00F000\",\n}\n\nconst z: ITetrimino = {\n  coordinates: [\n    [1, -1],\n    [1, 0],\n    [0, 0],\n    [0, 1],\n  ],\n  color: \"#F00000\",\n}\n\nconst t: ITetrimino = {\n  coordinates: [\n    [0, -1],\n    [0, 0],\n    [1, 0],\n    [-1, 0],\n  ],\n  color: \"#A000F0\",\n}\n\nconst getRandomTetriminos = () => {\n  const tetriminos = [t, z, s, l, j, i, o]\n  return JSON.parse(\n    JSON.stringify(tetriminos[Math.floor(Math.random() * tetriminos.length)])\n  ) as ITetrimino\n}\n\nexport const useTetriminos = (dimensions: Dimensions) => {\n  const [activeTetrimino, setActiveTetrimino] = useState(getRandomTetriminos())\n  const [nextTetrimino, setNextTetrimino] = useState(getRandomTetriminos())\n\n  const replaceCurrentTetrimino = useCallback(() => {\n    setActiveTetrimino(nextTetrimino)\n    setNextTetrimino(getRandomTetriminos())\n  }, [nextTetrimino])\n\n  return {\n    replaceCurrentTetrimino,\n    setActiveTetrimino,\n    activeTetrimino,\n    nextTetrimino,\n  }\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport { useTetriminos, ITetrimino } from \"../hooks/tetriminos\"\nimport { Coordinate, CoordinateDictionary } from \"../types\"\nimport { useCoordinates } from \"../hooks/coordinates\"\nimport { useMovement } from \"../hooks/movement\"\nimport { useBindings } from \"./bindings\"\n\nexport const shiftCoordinate = (\n  coordinate: Coordinate,\n  shift: Coordinate\n): Coordinate => [coordinate[0] + shift[0], coordinate[1] + shift[1]]\n\nexport const shiftCoordinates = (\n  coordinates: Coordinate[],\n  shift: Coordinate\n): Coordinate[] => {\n  return coordinates.map(coordinate => {\n    return shiftCoordinate(coordinate, shift)\n  })\n}\n\nexport const positionTetrimino = (\n  tetrimino: ITetrimino,\n  brickPosition: Coordinate\n) => {\n  return {\n    ...tetrimino,\n    coordinates: shiftCoordinates(tetrimino.coordinates, brickPosition),\n  }\n}\nexport const tetriminoToCoords = (tetrimino: ITetrimino) =>\n  tetrimino.coordinates.reduce((dict, coordinate) => {\n    dict[String(coordinate)] = tetrimino.color\n    return dict\n  }, {} as CoordinateDictionary)\n\nexport const useTetris = (initialDimensions: [number, number]) => {\n  const [dimensions, setDimensions] = useState(initialDimensions)\n  const {\n    activeTetrimino,\n    setActiveTetrimino,\n    nextTetrimino,\n    replaceCurrentTetrimino,\n  } = useTetriminos(dimensions)\n\n  const [brickPosition, setBrickPosition] = useState<Coordinate>([\n    1,\n    Math.floor(dimensions[1] / 2 + 1),\n  ])\n\n  const {\n    allCoordinates,\n    reset,\n    stationaryBrickCoordinates,\n    addStationaryCoordinates,\n  } = useCoordinates(activeTetrimino, brickPosition, dimensions)\n\n  const {\n    moveDown,\n    moveLeft,\n    moveRight,\n    rotateClockwise,\n    rotateCounterClockwise,\n  } = useMovement(\n    activeTetrimino,\n    setActiveTetrimino,\n    brickPosition,\n    setBrickPosition,\n    dimensions,\n    stationaryBrickCoordinates\n  )\n\n  const gotoDefaultBrickPosition = useCallback(() => {\n    setBrickPosition([1, Math.floor(dimensions[1] / 2 + 1)])\n  }, [])\n\n  const [gameTicker, setGameTicker] = useState(0)\n  const [speed, setSpeed] = useState(30)\n\n  const increaseSpeed = useCallback(\n    (rowsRemoved: number) => {\n      setSpeed(speed - 2 * rowsRemoved)\n    },\n    [speed]\n  )\n\n  const getNextTetrimino = useCallback(() => {\n    const rowsRemoved = addStationaryCoordinates(() => {\n      replaceCurrentTetrimino()\n      gotoDefaultBrickPosition()\n    })\n\n    increaseSpeed(rowsRemoved)\n  }, [addStationaryCoordinates, replaceCurrentTetrimino, increaseSpeed])\n\n  const bindings = [\n    { key: \"ArrowDown\", fn: moveDown },\n    { key: \"ArrowLeft\", fn: moveLeft },\n    { key: \"ArrowRight\", fn: moveRight },\n    { key: \"w\", fn: rotateClockwise },\n    { key: \"q\", fn: rotateCounterClockwise },\n  ]\n\n  useBindings(bindings)\n\n  useEffect(() => {\n    if (!(gameTicker % speed)) {\n      moveDown(getNextTetrimino)\n    }\n  }, [gameTicker, speed])\n\n  useEffect(() => {\n    setTimeout(() => setGameTicker(gameTicker + 1), 10) // divisible by 10\n  }, [gameTicker])\n\n  useEffect(() => {})\n  // useEffect(() => {\n  //   const gameTimer = setInterval(() => {\n  //     moveDown(getNextTetrimino)\n  //     // setBrickPosition(shiftCoordinate(brickPosition, [1, 0]))\n  //   }, 100)\n  //   return () => {\n  //     clearInterval(gameTimer)\n  //   }\n  // }, [brickPosition, getNextTetrimino])\n\n  return {\n    dimensions,\n    activeTetrimino,\n    tetriminoToCoords,\n    nextTetrimino,\n    replaceCurrentTetrimino,\n    allCoordinates,\n    shiftCoordinates,\n    setBrickPosition,\n    addStationaryCoordinates,\n    moveLeft,\n    moveRight,\n    speed,\n    moveDown,\n    reset,\n    rotateClockwise,\n    rotateCounterClockwise,\n  }\n}\n","import { useState, useEffect, useCallback } from \"react\"\nimport { ITetrimino } from \"./tetriminos\"\nimport {\n  Dimensions,\n  CoordinateDictionary,\n  CoordinateIndex,\n  Coordinate,\n} from \"../types\"\nimport { positionTetrimino, tetriminoToCoords } from \"./tetris\"\n\nexport const useCoordinates = (\n  activeTetrimino: ITetrimino,\n  brickPosition: Coordinate,\n  dimensions: Dimensions\n  // tetriminoPosition: Coordinate\n) => {\n  const [stationaryBrickCoordinates, setStationaryBrickCoordinates] = useState<\n    CoordinateDictionary\n  >({\n    \"15,0\": \"red\",\n    \"15,1\": \"red\",\n    \"15,2\": \"red\",\n  })\n  const [\n    stationaryBrickCoordinateIndex,\n    setStationaryBrickCoordinateIndex,\n  ] = useState<CoordinateIndex>({ \"15\": { \"0\": true, \"1\": true, \"2\": true } })\n\n  const [allCoordinates, setAllCoordinates] = useState<CoordinateDictionary>({})\n\n  const reset = useCallback(() => {\n    setStationaryBrickCoordinates({})\n    setStationaryBrickCoordinateIndex({})\n  }, [])\n\n  useEffect(() => {\n    const tetrimino = positionTetrimino(activeTetrimino, brickPosition)\n\n    setAllCoordinates({\n      ...stationaryBrickCoordinates,\n      ...tetriminoToCoords(tetrimino),\n    })\n  }, [activeTetrimino, stationaryBrickCoordinates, brickPosition])\n\n  const addStationaryCoordinates = useCallback(\n    (cb: Function) => {\n      const tetrimino = positionTetrimino(activeTetrimino, brickPosition)\n      const boardWidth = dimensions[1]\n\n      const newCoordinateDict = {\n        ...stationaryBrickCoordinates,\n        ...tetriminoToCoords(tetrimino),\n      }\n      const newCoordinateIndex = { ...stationaryBrickCoordinateIndex }\n\n      tetrimino.coordinates.forEach(([posY, posX]) => {\n        if (!newCoordinateIndex[posY]) {\n          newCoordinateIndex[posY] = {}\n        }\n        newCoordinateIndex[posY][posX] = true\n      })\n\n      const affectedRows = tetrimino.coordinates\n        .map(coordinate => coordinate[0])\n        .filter((value, index, self) => {\n          return self.indexOf(value) === index\n        })\n\n      const rowsToRemove = affectedRows.filter(\n        row => Object.keys(newCoordinateIndex[row]).length >= boardWidth\n      )\n      // delete coordinates and indexes\n      rowsToRemove.forEach(posY => {\n        Object.keys(newCoordinateIndex[posY]).forEach(posX => {\n          delete newCoordinateDict[String([posY, Number(posX)])]\n        })\n        delete newCoordinateIndex[posY]\n\n        for (let row = posY - 1; row >= 0; --row) {\n          // update Dictionary\n          Object.entries(newCoordinateIndex[row] || {}).forEach(([column]) => {\n            newCoordinateDict[String([row + 1, column])] =\n              newCoordinateDict[String([row, column])]\n            delete newCoordinateDict[String([row, column])]\n          })\n          // shift indexes\n          newCoordinateIndex[Number(row) + 1] = newCoordinateIndex[row]\n          delete newCoordinateIndex[row]\n        }\n      })\n\n      setStationaryBrickCoordinates(newCoordinateDict)\n      setStationaryBrickCoordinateIndex(newCoordinateIndex)\n\n      cb()\n      return rowsToRemove.length\n    },\n    [\n      stationaryBrickCoordinates,\n      stationaryBrickCoordinateIndex,\n      activeTetrimino,\n      brickPosition,\n    ]\n  )\n\n  return {\n    reset,\n    allCoordinates,\n    addStationaryCoordinates,\n    stationaryBrickCoordinates,\n  }\n}\n","import { useCallback, useEffect } from \"react\"\nimport { ITetrimino } from \"./tetriminos\"\nimport { Dimensions, CoordinateDictionary, Coordinate } from \"../types\"\nimport { shiftCoordinate, shiftCoordinates, positionTetrimino } from \"./tetris\"\n\nexport const useMovement = (\n  tetrimino: ITetrimino,\n  setActiveTetrimino: React.Dispatch<React.SetStateAction<ITetrimino>>,\n  brickPosition: Coordinate,\n  setBrickPosition: React.Dispatch<React.SetStateAction<[number, number]>>,\n  dimensions: Dimensions,\n  coordinatesDict: CoordinateDictionary\n) => {\n  const willCollide = useCallback(\n    (coordinates: Coordinate[]) => {\n      return coordinates.every(([posY, posX]) => {\n        const isClearLeft = 0 <= posX\n        const isClearRight = posX < dimensions[1]\n        const isClearTop = 0 <= posY\n        const isClearBottom = posY < dimensions[0]\n        const isClearEnvironment = !coordinatesDict[String([posY, posX])]\n        return (\n          isClearLeft &&\n          isClearRight &&\n          isClearTop &&\n          isClearBottom &&\n          isClearEnvironment\n        )\n      })\n    },\n    [dimensions, coordinatesDict]\n  )\n\n  const shift = useCallback(\n    (shift: Coordinate, cb?: Function) => {\n      const positionedTetrimino = positionTetrimino(tetrimino, brickPosition)\n\n      if (\n        willCollide(shiftCoordinates(positionedTetrimino.coordinates, shift))\n      ) {\n        setBrickPosition(shiftCoordinate(brickPosition, shift))\n      } else {\n        if (cb) cb()\n      }\n    },\n    [tetrimino, dimensions, coordinatesDict, brickPosition]\n  )\n\n  const rotate = useCallback(\n    (remapFunc: (Coordinate) => Coordinate) => {\n      const rotatedTetrimino: ITetrimino = {\n        ...tetrimino,\n        coordinates: tetrimino.coordinates.map(remapFunc),\n      }\n      const positionedTetrimino = positionTetrimino(\n        rotatedTetrimino,\n        brickPosition\n      )\n\n      if (!willCollide(positionedTetrimino.coordinates)) {\n        if (\n          willCollide(shiftCoordinates(positionedTetrimino.coordinates, [0, 1]))\n        ) {\n          shift([0, 1])\n          setActiveTetrimino(rotatedTetrimino)\n        }\n\n        if (\n          willCollide(\n            shiftCoordinates(positionedTetrimino.coordinates, [0, -1])\n          )\n        ) {\n          shift([0, -1])\n          setActiveTetrimino(rotatedTetrimino)\n        }\n      } else setActiveTetrimino(rotatedTetrimino)\n    },\n    [tetrimino, brickPosition]\n  )\n\n  const rotateClockwise = useCallback(() => {\n    rotate(([posY, posX]) => [posX, -posY])\n  }, [rotate])\n\n  const rotateCounterClockwise = useCallback(() => {\n    rotate(([posY, posX]) => [-posX, posY])\n  }, [rotate])\n\n  const moveLeft = useCallback(() => {\n    return shift([0, -1])\n  }, [shift])\n\n  const moveRight = useCallback(() => {\n    return shift([0, 1])\n  }, [shift])\n\n  const moveDown = useCallback(\n    (cb?: Function) => {\n      return shift([1, 0], cb)\n    },\n    [shift]\n  )\n\n  return {\n    rotateClockwise,\n    rotateCounterClockwise,\n    moveLeft,\n    moveRight,\n    moveDown,\n  }\n}\n","import { useEffect } from \"react\"\n\nexport const useBindings = (bindings: { key: string; fn: Function }[]) => {\n  useEffect(\n    () => {\n      const callbacks = bindings.map(binding => {\n        const callback = (event: any) =>\n          event.key === binding.key ? binding.fn() : null\n\n        window.addEventListener(\"keydown\", callback)\n        return callback\n      })\n\n      return () => {\n        callbacks.forEach(callback => {\n          window.removeEventListener(\"keydown\", callback)\n        })\n      }\n    },\n    bindings.map(binding => binding.fn)\n  )\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport { Board } from \"../components/board\"\nimport { useTetris, shiftCoordinates } from \"../hooks/tetris\"\nimport { Coordinate, CoordinateDictionary } from \"../types\"\n\nconst IndexPage = () => {\n  const [dimensions, setDimensions] = useState<Coordinate>([16, 10])\n\n  const {\n    allCoordinates,\n    tetriminoToCoords,\n    nextTetrimino,\n    shiftCoordinates,\n    activeTetrimino,\n    setBrickPosition,\n    rotateClockwise,\n    moveLeft,\n    reset,\n    moveRight,\n    moveDown,\n    speed,\n    rotateCounterClockwise,\n    replaceCurrentTetrimino,\n    addStationaryCoordinates, // for testing\n  } = useTetris(dimensions)\n\n  return (\n    <div>\n      <Board\n        dimensions={[5, 5]}\n        points={tetriminoToCoords({\n          color: nextTetrimino.color,\n          coordinates: shiftCoordinates(nextTetrimino.coordinates, [2, 2]),\n        })}\n      />\n      <Board dimensions={dimensions} points={allCoordinates} />\n      <br />\n      <h3>Blocks move every {speed}/ms</h3>\n      <label htmlFor=\"\">Height</label>\n      <input\n        type=\"number\"\n        value={dimensions[0]}\n        onChange={event =>\n          setDimensions([Number(event.target.value), dimensions[1]])\n        }\n      />\n      <label htmlFor=\"\">width</label>\n      <input\n        type=\"number\"\n        value={dimensions[1]}\n        onChange={event =>\n          setDimensions([dimensions[0], Number(event.target.value)])\n        }\n      />\n      <br />\n      <button onClick={reset}>Reset</button>\n    </div>\n  )\n}\n\nexport default IndexPage\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}